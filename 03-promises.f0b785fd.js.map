{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,SACpCC,EAAaF,SAASC,cAAc,kBACpCE,EAAYH,SAASC,cAAc,iBACnCG,EAAgBJ,SAASC,cAAc,mBACvCI,EAAoBL,SAASC,cAAc,UAIjD,SAASK,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAZbT,EAAWiB,iBAAiB,UAgB5B,SAAkBC,GAChBA,EAAEC,iBACFb,EAAkBc,UAAW,EAC7B,MAAMC,EAAkBC,OAAOnB,EAAWoB,OACpCC,EAAYF,OAAOlB,EAAUmB,OAC7BE,EAAcH,OAAOjB,EAAckB,OAEzC,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EAAG,CAExCnB,EAAcmB,EADKL,EAAkBG,EAAYE,GAE9CC,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBX,EAAA8B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,MAAU,IAEhEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAClBX,EAAA8B,OAAOG,QAAQ,sBAAoBvB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst submitForm = document.querySelector('.form');\nconst firstDelay = document.querySelector('[name=\"delay\"]');\nconst delayStep = document.querySelector('[name=\"step\"]');\nconst amountPromise = document.querySelector('[name=\"amount\"]');\nconst createPromisesBtn = document.querySelector('button');\n\nsubmitForm.addEventListener('submit', onSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmit(e) {\n  e.preventDefault();\n  createPromisesBtn.disabled = true;\n  const valueFirstDelay = Number(firstDelay.value);\n  const valueStep = Number(delayStep.value);\n  const valueAmount = Number(amountPromise.value);\n\n  for (let i = 1; i <= valueAmount; i += 1) {\n    let promiseDelay = valueFirstDelay + valueStep * i;\n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$submitForm","document","querySelector","$47d4ff9957288465$var$firstDelay","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amountPromise","$47d4ff9957288465$var$createPromisesBtn","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","disabled","valueFirstDelay","Number","value","valueStep","valueAmount","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.f0b785fd.js.map"}